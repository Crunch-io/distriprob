"use strict";

/**
 * (C) Copyright Hubert Holin 2001.
 * (C) Copyright Zachary Martin 2016 (port to javascript).
 * Use, modification and distribution are subject to the
 * Boost Software License:
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

const Precision = require("../tools/precision").Precision;


export class Sinc {

  public static sinc_pi(x: number): number {
    const taylor_0_bound = Precision.epsilon();
    const taylor_2_bound = Precision.root_epsilon();
    const taylor_n_bound = Precision.forth_root_epsilon();

    if (Math.abs(x) >= taylor_n_bound) {
      return(Math.sin(x)/x);
    } else {
      // approximation by taylor series in x at 0 up to order 0
      let result = 1;

      if (Math.abs(x) >= taylor_0_bound) {
        const x2 = x*x;

        // approximation by taylor series in x at 0 up to order 2
        result -= x2/6;

        if (Math.abs(x) >= taylor_2_bound) {
          // approximation by taylor series in x at 0 up to order 4
          result += (x2*x2)/120;
        }
      }

      return(result);
    }
  }

}