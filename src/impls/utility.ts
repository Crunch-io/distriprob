"use strict";

/**
 * (C) Copyright Zachary Martin 2016.
 * Use, modification and distribution are subject to the
 * Boost Software License:
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

//const fs = require("fs");

export class Utility {

  public static environmentIsNode(): boolean {
    return typeof process === "object" && process + "" === "[object process]";
  }

  // private static getFiles(dir: string, files_: string[]): string[] {
  //   var files = fs.readdirSync(dir);
  //   for (var i in files){
  //     var name = dir + '/' + files[i];
  //     if (fs.statSync(name).isDirectory()){
  //       Utility.getFiles(name, files_);
  //     } else {
  //       files_.push(name.replace(/\.[^/.]+$/, ""));
  //     }
  //   }
  //   return files_;
  // }
  //
  // public static getAllDependencyPaths(rootDir: string): string[] {
  //   return Utility.getFiles(rootDir, []);
  // }
}

// for (let dependency of Utility.getAllDependencyPaths("../../src/impls")) {
//   console.log(`require("${dependency.replace("../../src/impls", ".")}"),`);
// }

